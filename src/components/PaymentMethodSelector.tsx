import React from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";

export type PaymentMethodType =
  | "bank_card"
  | "yoo_money"
  | "sberbank"
  | "tinkoff_bank"
  | "mobile_balance"
  | "cash";

interface PaymentMethod {
  type: PaymentMethodType;
  title: string;
  description: string;
  icon: string;
  available: boolean;
}

const paymentMethods: PaymentMethod[] = [
  {
    type: "bank_card",
    title: "–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞",
    description: "Visa, Mastercard, –ú–ò–†",
    icon: "üí≥",
    available: true,
  },
  {
    type: "yoo_money",
    title: "–ÆMoney",
    description: "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –∫–æ—à–µ–ª–µ–∫",
    icon: "üí∞",
    available: true,
  },
  {
    type: "sberbank",
    title: "SberPay",
    description: "–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ –°–±–µ—Ä–±–∞–Ω–∫",
    icon: "üü¢",
    available: true,
  },
  {
    type: "tinkoff_bank",
    title: "T-Pay",
    description: "–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ –¢-–ë–∞–Ω–∫",
    icon: "üü°",
    available: true,
  },
  {
    type: "mobile_balance",
    title: "–ë–∞–ª–∞–Ω—Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
    description: "–û–ø–ª–∞—Ç–∞ —Å –º–æ–±–∏–ª—å–Ω–æ–≥–æ",
    icon: "üì±",
    available: true,
  },
  {
    type: "cash",
    title: "–ù–∞–ª–∏—á–Ω—ã–µ",
    description: "–ß–µ—Ä–µ–∑ —Ç–µ—Ä–º–∏–Ω–∞–ª—ã",
    icon: "üíµ",
    available: true,
  },
];

interface PaymentMethodSelectorProps {
  selectedMethod: PaymentMethodType | null;
  onMethodSelect: (method: PaymentMethodType) => void;
}

const PaymentMethodSelector: React.FC<PaymentMethodSelectorProps> = ({
  selectedMethod,
  onMethodSelect,
}) => {
  return (
    <div className="space-y-4">
      <h3 className="text-lg font-semibold text-gray-800 mb-4">
        –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
      </h3>

      <div className="grid gap-3">
        {paymentMethods.map((method) => (
          <Card
            key={method.type}
            className={`cursor-pointer transition-all duration-200 ${
              selectedMethod === method.type
                ? "ring-2 ring-blue-500 bg-blue-50"
                : "hover:bg-gray-50"
            } ${!method.available ? "opacity-50 cursor-not-allowed" : ""}`}
            onClick={() => method.available && onMethodSelect(method.type)}
          >
            <CardContent className="p-4">
              <div className="flex items-center space-x-4">
                <div className="text-2xl">{method.icon}</div>
                <div className="flex-1">
                  <h4 className="font-semibold text-gray-900">
                    {method.title}
                  </h4>
                  <p className="text-sm text-gray-600">{method.description}</p>
                </div>
                {selectedMethod === method.type && (
                  <div className="text-blue-500 text-xl">‚úì</div>
                )}
              </div>
            </CardContent>
          </Card>
        ))}
      </div>
    </div>
  );
};

export default PaymentMethodSelector;
